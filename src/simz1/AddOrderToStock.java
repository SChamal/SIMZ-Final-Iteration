/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simz1;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import static simz1.LoginFrame1.mhp;

/**
 *
 * @author DELL
 */
public class AddOrderToStock extends javax.swing.JFrame {
    DBOperations dbOps = new DBOperations();
    /**
     * Creates new form AddOrderToStock
     */
    public AddOrderToStock() {
        initComponents();
        java.util.Date date = new java.util.Date();
        SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss");
        lblTime.setText(sdf.format(date));
        SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd");
        lblDate.setText(sdf2.format(date));
        ResultSet rst = dbOps.getOrderIDList(sdf2.format(date)+"");

        try {
            while(rst.next()){
                dropDownMenu.addItem("Order "+rst.getInt(1)+"");
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
        dropDownMenu.addItemListener(new ItemListener() {
                        @Override
                        public void itemStateChanged(ItemEvent ie) {
                            if (ie.getStateChange() == ItemEvent.SELECTED) {
                                String name = dropDownMenu.getSelectedItem().toString();
                                int number =Integer.parseInt(name.substring(6));
                                ResultSet rst =dbOps.combineProductDetailsAndOrder_2(number);
                                addOrdersTableModel model= new addOrdersTableModel();
                                tblAddOrder.setModel((TableModel) model);
                                try {
                                    while(rst.next()){
                                        model.addRow(new Object[]{true,rst.getInt(1), rst.getString(3), rst.getString(2)});
                                    }
                                } catch (SQLException ex) {
                                    Logger.getLogger(viewOrders.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                        }
                    });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAddOrder = new javax.swing.JTable();
        btnTakeOrder = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblDate = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        dropDownMenu = new javax.swing.JComboBox();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Order ID:");

        jLabel2.setText("Arrived Date :");

        jLabel3.setText("Arrived Time :");

        tblAddOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "Product ID", "Product Name", "Order Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblAddOrder);

        btnTakeOrder.setText("Add to Stock");
        btnTakeOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTakeOrderActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblDate.setText("Date");

        lblTime.setText("Time");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(228, 228, 228)
                        .addComponent(btnTakeOrder))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(75, 75, 75)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblDate, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                    .addComponent(lblTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dropDownMenu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(dropDownMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblDate))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTakeOrder)
                    .addComponent(btnCancel))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnTakeOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTakeOrderActionPerformed
        ArrayList<Integer> ProductIDList = new ArrayList<>();
        int rows =mhp.tableProduct.getRowCount();
        for(int i=0;i<rows;i++){
            ProductIDList.add(Integer.parseInt(mhp.tableProduct.getValueAt(i, 1).toString()));
        }
        int rowNumber = tblAddOrder.getRowCount();
        for(int j=0;j<rowNumber;j++){
            if(ProductIDList.contains(Integer.parseInt(tblAddOrder.getValueAt(j, 1).toString()))){
                int productID = Integer.parseInt(tblAddOrder.getValueAt(j, 1).toString());
                int currTodaysQty;
                int currReceivedQty;
                for(int k=0;k<rows;k++){
                    if(Integer.parseInt(mhp.tableProduct.getValueAt(k, 1).toString())==productID){
                        currTodaysQty= Integer.parseInt(mhp.tableProduct.getValueAt(k, 5).toString());
                        mhp.tableProduct.setValueAt(currTodaysQty+Integer.parseInt(tblAddOrder.getValueAt(j, 3).toString()), k, 5);
                        currReceivedQty= Integer.parseInt(mhp.tableProduct.getValueAt(k, 6).toString());
                        mhp.tableProduct.setValueAt(currReceivedQty+Integer.parseInt(tblAddOrder.getValueAt(j, 3).toString()), k, 6);
                    }
                }               
            }else{
                ResultSet rst = dbOps.getProductDetails(Integer.parseInt(tblAddOrder.getValueAt(j, 1).toString()));
                DefaultTableModel model = (DefaultTableModel) mhp.tableProduct.getModel();
                try {
                    while (rst.next()) {
                        int val =Integer.parseInt(tblAddOrder.getValueAt(j, 3).toString());
                        model.addRow(new Object[]{false, Integer.parseInt(tblAddOrder.getValueAt(j, 1).toString()),rst.getString(1), rst.getString(2), rst.getString(3), val, val,  0});
                    }
                } catch (SQLException ex){
                    System.err.println(ex);
                }
            }
        }
        //set evening stock to the orders table
        DefaultTableModel modelOrder = (DefaultTableModel) mhp.tblOrder.getModel();
        ResultSet rst = dbOps.combineEveningStockAndStock();
        int orderTableRows = 0;
        int max = dbOps.getMaxOrderID();
        try {
            while (rst.next()) {                                            
                modelOrder.insertRow(orderTableRows, new Object[]{true, max + 1, rst.getInt(1), rst.getString(2), mhp.today, mhp.time, rst.getString(3)});
                orderTableRows++;
            }
        } catch (SQLException ex) {

        }
        //update todayStock DB
        int rowCount = mhp.tableProduct.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            int id = Integer.parseInt(mhp.tableProduct.getValueAt(i, 1).toString());
            int receivedQty = Integer.parseInt(mhp.tableProduct.getValueAt(i, 6).toString());
            int currentQty = Integer.parseInt(mhp.tableProduct.getValueAt(i, 5).toString());
            boolean result = dbOps.updateTodayStock(id, receivedQty, currentQty);
            String exDate="0000-00-00";            
            if(!result){                
                boolean output = dbOps.setTodayStock(id, mhp.today, receivedQty, currentQty, exDate, receivedQty);  
                if(!output){
                    JOptionPane.showMessageDialog(this, "Newly arrived products didn't added to the database successfully!!!");
                    return;
                }
            }                        
        }


        ResultSet rs = dbOps.combineProductDetailsAndTodaysStock();
        ReportsTableModel modelReports = new ReportsTableModel();
        mhp.tblReports.setModel((TableModel) modelReports);
        try {
            while (rs.next()) {
                modelReports.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3)});
            }

        } catch (SQLException ex) {
            System.out.println(ex);
        }
        mhp.orderStatusFlag++;
        //Set Stock status messages
        if(mhp.orderStatusFlag==1){
            mhp.lblStockStatus.setText("Afternoon stock is set now");
            mhp.lblOrderStatus.setText("Evening Stock is due to order");
        }else if(mhp.orderStatusFlag==2){
            mhp.lblStockStatus.setText("Evening stock is set now");
            mhp.lblOrderStatus.setText("No more orders are allowed");
            mhp.btnAddOrderToStock.setVisible(false); //Can't add more orders
            mhp.btnProcessOrder.setVisible(false);    //Can't process more orders
            mhp.btnRefill.setVisible(false);          //Can't re-fill quantities
        }
        JOptionPane.showMessageDialog(this, "Newly arrived added successfully!!!");        
        this.setVisible(false);
    }//GEN-LAST:event_btnTakeOrderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddOrderToStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddOrderToStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddOrderToStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddOrderToStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddOrderToStock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnTakeOrder;
    public static javax.swing.JComboBox dropDownMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblTime;
    private javax.swing.JTable tblAddOrder;
    // End of variables declaration//GEN-END:variables
}
